Only in keepalived-1.1.20_unicast/doc/samples: keepalived.conf.IPv6
Only in keepalived-1.1.20_unicast: goodies
diff -ur keepalived-1.1.20/keepalived/core/main.c keepalived-1.1.20_unicast/keepalived/core/main.c
--- keepalived-1.1.20/keepalived/core/main.c	2010-05-06 15:49:55.000000000 +0000
+++ keepalived-1.1.20_unicast/keepalived/core/main.c	2012-03-05 21:02:00.093436749 +0000
@@ -153,14 +153,15 @@
 		"  %s --dump-conf          -d    Dump the configuration data.\n"
 		"  %s --log-console        -l    Log message to local console.\n"
 		"  %s --log-detail         -D    Detailed log messages.\n"
+		"  %s --no-syslog          -N    Log only to local console.\n"
 		"  %s --log-facility       -S    0-7 Set syslog facility to LOG_LOCAL[0-7]. (default=LOG_DAEMON)\n"
 		"  %s --help               -h    Display this short inlined help screen.\n"
 		"  %s --version            -v    Display the version number\n"
 		"  %s --pid                -p    pidfile\n"
 		"  %s --checkers_pid       -c    checkers pidfile\n"
 		"  %s --vrrp_pid           -r    vrrp pidfile\n",
-		prog, prog, prog, prog, prog, prog, prog, prog,
-		prog, prog, prog, prog, prog, prog, prog);
+        prog, prog, prog, prog, prog, prog, prog, prog, prog,
+        prog, prog, prog, prog, prog, prog, prog);
 }
 
 /* Command line parser */
@@ -175,6 +176,7 @@
 		{"version", 'v', POPT_ARG_NONE, NULL, 'v'},
 		{"help", 'h', POPT_ARG_NONE, NULL, 'h'},
 		{"log-console", 'l', POPT_ARG_NONE, NULL, 'l'},
+        {"no-syslog", 'N', POPT_ARG_NONE, NULL, 'N'},
 		{"log-detail", 'D', POPT_ARG_NONE, NULL, 'D'},
 		{"log-facility", 'S', POPT_ARG_STRING, &option_arg, 'S'},
 		{"dont-release-vrrp", 'V', POPT_ARG_NONE, NULL, 'V'},
@@ -224,6 +226,10 @@
 	case 'D':
 		debug |= 32;
 		break;
+    case 'N':
+        enable_console_log();
+        disable_syslog();
+        break;
 	case 'S':
 		log_facility = LOG_FACILITY[atoi(option_arg)].facility;
 		break;
@@ -269,6 +275,10 @@
 		case 'D':
 			debug |= 32;
 			break;
+        case 'N':
+            enable_console_log();
+            disable_syslog();
+            break;
 		case 'S':
 			log_facility = LOG_FACILITY[atoi(option_arg)].facility;
 			break;
diff -ur keepalived-1.1.20/keepalived/include/vrrp.h keepalived-1.1.20_unicast/keepalived/include/vrrp.h
--- keepalived-1.1.20/keepalived/include/vrrp.h	2010-05-06 15:51:59.000000000 +0000
+++ keepalived-1.1.20_unicast/keepalived/include/vrrp.h	2012-03-05 21:02:00.213325731 +0000
@@ -93,6 +93,8 @@
 	list track_ifp;		/* Interface state we monitor */
 	list track_script;	/* Script state we monitor */
 	uint32_t mcast_saddr;	/* Src IP address to use in VRRP IP header */
+	uint32_t unicast_bind;	/* listen to this IP if mcast is not possible */
+	uint32_t unicast_peer;	/* send to this IP if mcast is not possible */
 	char *lvs_syncd_if;	/* handle LVS sync daemon state using this
 				 * instance FSM & running on specific interface
 				 * => eth0 for example.
@@ -208,8 +210,8 @@
 #define VRRP_ISUP(V)           (VRRP_IF_ISUP(V) && VRRP_SCRIPT_ISUP(V))
 
 /* prototypes */
-extern int open_vrrp_send_socket(const int proto, const int idx);
-extern int open_vrrp_socket(const int proto, const int idx);
+extern int open_vrrp_send_socket(const int proto, const int id, const int unicastx);
+extern int open_vrrp_socket(const int proto, const int idx, const int unicast);
 extern int new_vrrp_socket(vrrp_rt * vrrp);
 extern void close_vrrp_socket(vrrp_rt * vrrp);
 extern void vrrp_send_gratuitous_arp(vrrp_rt * vrrp);
diff -ur keepalived-1.1.20/keepalived/include/vrrp_if.h keepalived-1.1.20_unicast/keepalived/include/vrrp_if.h
--- keepalived-1.1.20/keepalived/include/vrrp_if.h	2010-05-06 15:52:03.000000000 +0000
+++ keepalived-1.1.20_unicast/keepalived/include/vrrp_if.h	2012-03-05 21:02:00.263309335 +0000
@@ -116,7 +116,7 @@
 extern void free_interface_queue(void);
 extern void dump_if(void *if_data_obj);
 extern int if_join_vrrp_group(int sd, interface * ifp, int proto);
-extern void if_leave_vrrp_group(int sd, interface * ifp);
+extern void if_leave_vrrp_group(int sd, interface * ifp, int unicast);
 extern int if_setsockopt_bindtodevice(int sd, interface * ifp);
 extern int if_setsockopt_hdrincl(int sd);
 extern int if_setsockopt_mcast_loop(int sd);
Only in keepalived-1.1.20_unicast/keepalived/include: vrrp_ndisc.h
Only in keepalived-1.1.20_unicast/keepalived/libipvs-2.6: Makefile
Only in keepalived-1.1.20_unicast/keepalived/libipvs-2.6: ip_vs.h
Only in keepalived-1.1.20_unicast/keepalived/libipvs-2.6: ip_vs_nl_policy.c
diff -ur keepalived-1.1.20/keepalived/vrrp/vrrp.c keepalived-1.1.20_unicast/keepalived/vrrp/vrrp.c
--- keepalived-1.1.20/keepalived/vrrp/vrrp.c	2010-05-06 15:53:08.000000000 +0000
+++ keepalived-1.1.20_unicast/keepalived/vrrp/vrrp.c	2012-03-05 21:02:00.393424382 +0000
@@ -326,8 +326,8 @@
 	/* fill protocol type --rfc2402.2 */
 	ip->protocol =
 	    (vrrp->auth_type == VRRP_AUTH_AH) ? IPPROTO_IPSEC_AH : IPPROTO_VRRP;
-	ip->saddr = VRRP_PKT_SADDR(vrrp);
-	ip->daddr = htonl(INADDR_VRRP_GROUP);
+	ip->saddr = vrrp->unicast_bind ? vrrp->unicast_bind : VRRP_PKT_SADDR(vrrp);
+	ip->daddr = vrrp->unicast_peer ? vrrp->unicast_peer : htonl(INADDR_VRRP_GROUP);
 
 	/* checksum must be done last */
 	ip->check = in_csum((u_short *) ip, ip->ihl * 4, 0);
@@ -502,7 +502,7 @@
 	/* Sending path */
 	memset(&dst, 0, sizeof(dst));
 	dst.sin_family = AF_INET;
-	dst.sin_addr.s_addr = htonl(INADDR_VRRP_GROUP);
+	dst.sin_addr.s_addr = vrrp->unicast_peer ? vrrp->unicast_peer : htonl(INADDR_VRRP_GROUP);
 	dst.sin_port = htons(0);
 
 	/* Build the message data */
@@ -907,7 +907,7 @@
 
 /* open a VRRP sending socket */
 int
-open_vrrp_send_socket(const int proto, const int idx)
+open_vrrp_send_socket(const int proto, const int idx, const int unicast)
 {
 	interface *ifp;
 	int fd = -1;
@@ -927,14 +927,18 @@
 	/* Set fd */
 	if_setsockopt_hdrincl(fd);
 	if_setsockopt_bindtodevice(fd, ifp);
-	if_setsockopt_mcast_loop(fd);
+	if (!unicast){
+		if_setsockopt_mcast_loop(fd);
+    } else {
+      log_message(LOG_INFO, "using unicast rather than multicast for vrrp send socket");
+    }
 
 	return fd;
 }
 
 /* open a VRRP socket and join the multicast group. */
 int
-open_vrrp_socket(const int proto, const int idx)
+open_vrrp_socket(const int proto, const int idx, const int unicast)
 {
 	interface *ifp;
 	int fd = -1;
@@ -952,7 +956,11 @@
 	}
 
 	/* Join the VRRP MCAST group */
-	if_join_vrrp_group(fd, ifp, proto);
+	if (!unicast){
+      if_join_vrrp_group(fd, ifp, proto);
+    } else {
+      log_message(LOG_INFO, "using unicast rather than multicast for vrrp socket ");
+    }
 
 	/* Bind inbound stream */
 	if_setsockopt_bindtodevice(fd, ifp);
@@ -963,7 +971,7 @@
 void
 close_vrrp_socket(vrrp_rt * vrrp)
 {
-	if_leave_vrrp_group(vrrp->fd_in, vrrp->ifp);
+	if_leave_vrrp_group(vrrp->fd_in, vrrp->ifp, !vrrp->unicast_peer);
 	close(vrrp->fd_out);
 }
 
@@ -977,8 +985,8 @@
 	close_vrrp_socket(vrrp);
 	remove_vrrp_fd_bucket(vrrp);
 	proto = (vrrp->auth_type == VRRP_AUTH_AH) ? IPPROTO_IPSEC_AH : IPPROTO_VRRP;
-	vrrp->fd_in = open_vrrp_socket(proto, IF_INDEX(vrrp->ifp));
-	vrrp->fd_out = open_vrrp_send_socket(proto, IF_INDEX(vrrp->ifp));
+	vrrp->fd_in = open_vrrp_socket(proto, IF_INDEX(vrrp->ifp), !vrrp->unicast_peer);
+	vrrp->fd_out = open_vrrp_send_socket(proto, IF_INDEX(vrrp->ifp), !vrrp->unicast_peer);
 	alloc_vrrp_fd_bucket(vrrp);
 
 	/* Sync the other desc */
diff -ur keepalived-1.1.20/keepalived/vrrp/vrrp_data.c keepalived-1.1.20_unicast/keepalived/vrrp/vrrp_data.c
--- keepalived-1.1.20/keepalived/vrrp/vrrp_data.c	2010-05-06 15:53:18.000000000 +0000
+++ keepalived-1.1.20_unicast/keepalived/vrrp/vrrp_data.c	2012-03-05 21:02:00.473317070 +0000
@@ -139,7 +139,7 @@
 	interface *ifp;
 	if (sock_obj->fd_in > 0) {
 		ifp = if_get_by_ifindex(sock_obj->ifindex);
-		if_leave_vrrp_group(sock_obj->fd_in, ifp);
+		if_leave_vrrp_group(sock_obj->fd_in, ifp, 0);
 	}
 	if (sock_obj->fd_out > 0)
 		close(sock_obj->fd_out);
diff -ur keepalived-1.1.20/keepalived/vrrp/vrrp_if.c keepalived-1.1.20_unicast/keepalived/vrrp/vrrp_if.c
--- keepalived-1.1.20/keepalived/vrrp/vrrp_if.c	2010-05-06 15:53:26.000000000 +0000
+++ keepalived-1.1.20_unicast/keepalived/vrrp/vrrp_if.c	2012-03-05 21:02:00.473317070 +0000
@@ -443,7 +443,7 @@
 }
 
 void
-if_leave_vrrp_group(int sd, interface *ifp)
+if_leave_vrrp_group(int sd, interface *ifp, int unicast)
 {
 	struct ip_mreqn req_add;
 	int ret = 0;
@@ -452,6 +452,9 @@
 	if (sd < 0 || !ifp)
 		return;
 
+	if (unicast)
+		goto skip_mcast_release;
+
 	/* Leaving the VRRP multicast group */
 	memset(&req_add, 0, sizeof (req_add));
 	req_add.imr_multiaddr.s_addr = htonl(INADDR_VRRP_GROUP);
@@ -465,6 +468,7 @@
 		return;
 	}
 
+skip_mcast_release:
 	/* Finally close the desc */
 	close(sd);
 }
Only in keepalived-1.1.20_unicast/keepalived/vrrp: vrrp_ndisc.c
diff -ur keepalived-1.1.20/keepalived/vrrp/vrrp_parser.c keepalived-1.1.20_unicast/keepalived/vrrp/vrrp_parser.c
--- keepalived-1.1.20/keepalived/vrrp/vrrp_parser.c	2010-05-06 15:54:09.000000000 +0000
+++ keepalived-1.1.20_unicast/keepalived/vrrp/vrrp_parser.c	2012-03-05 21:02:00.493357485 +0000
@@ -145,6 +145,18 @@
 	inet_ston(VECTOR_SLOT(strvec, 1), &vrrp->mcast_saddr);
 }
 static void
+vrrp_unicast_bind_handler(vector strvec)
+{
+	vrrp_rt *vrrp = LIST_TAIL_DATA(vrrp_data->vrrp);
+	inet_ston(VECTOR_SLOT(strvec, 1), &vrrp->unicast_bind);
+}
+static void
+vrrp_unicast_peer_handler(vector strvec)
+{
+	vrrp_rt *vrrp = LIST_TAIL_DATA(vrrp_data->vrrp);
+	inet_ston(VECTOR_SLOT(strvec, 1), &vrrp->unicast_peer);
+}
+static void
 vrrp_vrid_handler(vector strvec)
 {
 	vrrp_rt *vrrp = LIST_TAIL_DATA(vrrp_data->vrrp);
@@ -417,6 +429,8 @@
 	install_keyword("track_interface", &vrrp_track_int_handler);
 	install_keyword("track_script", &vrrp_track_scr_handler);
 	install_keyword("mcast_src_ip", &vrrp_mcastip_handler);
+	install_keyword("vrrp_unicast_bind", &vrrp_unicast_bind_handler);
+	install_keyword("vrrp_unicast_peer", &vrrp_unicast_peer_handler);
 	install_keyword("virtual_router_id", &vrrp_vrid_handler);
 	install_keyword("priority", &vrrp_prio_handler);
 	install_keyword("advert_int", &vrrp_adv_handler);
diff -ur keepalived-1.1.20/keepalived/vrrp/vrrp_scheduler.c keepalived-1.1.20_unicast/keepalived/vrrp/vrrp_scheduler.c
--- keepalived-1.1.20/keepalived/vrrp/vrrp_scheduler.c	2010-05-06 15:54:12.000000000 +0000
+++ keepalived-1.1.20_unicast/keepalived/vrrp/vrrp_scheduler.c	2012-03-05 21:02:00.493357485 +0000
@@ -457,12 +457,12 @@
 
 	for (e = LIST_HEAD(l); e; ELEMENT_NEXT(e)) {
 		sock_obj = ELEMENT_DATA(e);
-		sock_obj->fd_in = open_vrrp_socket(sock_obj->proto, sock_obj->ifindex);
+		sock_obj->fd_in = open_vrrp_socket(sock_obj->proto, sock_obj->ifindex, 0);
 		if (sock_obj->fd_in == -1)
 			sock_obj->fd_out = -1;
 		else
 			sock_obj->fd_out = open_vrrp_send_socket(sock_obj->proto,
-								 sock_obj->ifindex);
+								 sock_obj->ifindex, 0);
 	}
 }
 
diff -ur keepalived-1.1.20/lib/logger.c keepalived-1.1.20_unicast/lib/logger.c
--- keepalived-1.1.20/lib/logger.c	2010-05-06 15:46:13.000000000 +0000
+++ keepalived-1.1.20_unicast/lib/logger.c	2012-03-05 21:02:00.513367180 +0000
@@ -26,12 +26,24 @@
 
 /* Boolean flag - send messages to console as well as syslog */
 static int log_console = 0;
+static int log_syslog = 1;
 
-void
-enable_console_log(void) {
+void enable_console_log(void) {
 	log_console = 1;
 }
 
+void disable_console_log(void) {
+  log_console = 0;
+}
+
+void enable_syslog(void) {
+  log_syslog = 1;
+}
+
+void disable_syslog(void) {
+  log_syslog = 0;
+}
+
 void
 log_message(const int facility, const char *format, ...)
 {
@@ -44,5 +56,7 @@
 		fprintf(stderr,"\n");
 	}
 
-	vsyslog(facility, format, args);
+    if (log_syslog){
+      vsyslog(facility, format, args);
+    }
 }
diff -ur keepalived-1.1.20/lib/utils.h keepalived-1.1.20_unicast/lib/utils.h
--- keepalived-1.1.20/lib/utils.h	2010-05-06 15:47:25.000000000 +0000
+++ keepalived-1.1.20_unicast/lib/utils.h	2012-03-05 21:02:00.563306332 +0000
@@ -28,6 +28,7 @@
 #include <stdlib.h>
 #include <stdint.h>
 #include <string.h>
+#include <syslog.h>
 #include <arpa/inet.h>
 #include <arpa/nameser.h>
 #include <sys/param.h>
